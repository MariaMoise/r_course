getwd()
read.table(file = "a.txt", header = TRUE)
read.table(file = "a.txt")
read.table(file = "lol.txt", header = TRUE)
getwd()
read.table(file = "lol.txt", header = TRUE)
galas <- read.table(file = "lol.txt", header = TRUE)
View(galas)
View(galas)
lm(galas[,1] ~ galas[,2])
View(galas)
summary(galas)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
install.packages("Ecdat")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages(c("GGally", "sjPlot", "lmtest", "sjstats", "sandwich", "AER"))
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
setwd("C:/Users/icef_guest/Desktop/etalon/r_course")
pulse <- import('data/pulse.txt')
skim(pulse)
model_r <- lm(data = pulse_fct, Pulse2 ~ Pulse1)
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r <- lm(data = pulse_fct, Pulse2 ~ Pulse1)
summary(model_r)
tidy(model_r)
glance(model_r)
coeftest(model_r)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.5)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.05)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.5)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
summary(model_ur)
ggnostic(model = model_ur)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
ggnostic(model = model_ur)
coefci(model_ur)
plot_model(model_ur, ci.lvl = 0.9)
?plot_model
plot_model(model_ur, ci.lvl = 0.9)
vif(model_ur)
