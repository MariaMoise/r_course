getwd()
read.table(file = "a.txt", header = TRUE)
read.table(file = "a.txt")
read.table(file = "lol.txt", header = TRUE)
getwd()
read.table(file = "lol.txt", header = TRUE)
galas <- read.table(file = "lol.txt", header = TRUE)
View(galas)
View(galas)
lm(galas[,1] ~ galas[,2])
View(galas)
summary(galas)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
install.packages("Ecdat")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages(c("GGally", "sjPlot", "lmtest", "sjstats", "sandwich", "AER"))
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
setwd("C:/Users/icef_guest/Desktop/etalon/r_course")
pulse <- import('data/pulse.txt')
skim(pulse)
model_r <- lm(data = pulse_fct, Pulse2 ~ Pulse1)
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r <- lm(data = pulse_fct, Pulse2 ~ Pulse1)
summary(model_r)
tidy(model_r)
glance(model_r)
coeftest(model_r)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.5)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.05)
ggplot(data = pulse_fct, aes(x = Pulse1, y = Pulse2)) +
geom_point() +
geom_smooth(method = 'lm', level = 0.5)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
summary(model_ur)
ggnostic(model = model_ur)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
ggnostic(model = model_ur)
coefci(model_ur)
plot_model(model_ur, ci.lvl = 0.9)
?plot_model
plot_model(model_ur, ci.lvl = 0.9)
vif(model_ur)
install.packages(c("huxtable", "stargazer", "texreg", "estimatr"))
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
library(Ecdat) # много-много разных наборов данных
library(huxtable) # красивые таблички в html, tex
library(stargazer) # красивые таблички в html, tex
library(texreg) # и снова красивые таблички в html, tex :)
library(estimatr) # модели с робастными ошибками
library(tidyverse) # обработка данных, графики...
library(skimr)# описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(cluster) # кластерный анализ
library(factoextra) # визуализации kmeans, pca,
library(dendextend) # визуализация дендрограмм
library(corrplot) # визуализация корреляций
library(broom) # метла превращает результаты оценивания моделей в таблички
library(naniar) # визуализация пропущенных значений
library(visdat) # визуализация пропущенных значений
library(patchwork) # удобное расположение графиков рядом
install.packages("factoextra")
protein <- import('Europenaprotein.csv')
skim(protein)
setwd("C:/Users/icef_guest/Desktop/etalon/r_course")
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r <- lm(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
summary(model_ur)
?lm_robust
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
summary(model_ur_rob)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes, se_type = "HC4m")
coeftest(model_ur_rob)
coefci(model_ur_rob, level = 0.9)
class(model_ur)
plot(model-ur)
plot(model_ur)
View(model_r_rob)
View(model_ur)
model_ur[["residuals"]]
waldtest(model_r_rob, model_ur_rob)
waldtest(model_r_rob, model_ur_rob)
coeftest(model_ur, vcov. = vcovHC)
coefci(model_ur, vcov. = vcovHC)
bptest(Pulse2 ~ Pulse1+Smokes, varformula = ~Smokes, data = pulse_fct)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes, se_type = "HC2")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(patchwork) # удобное расположение графиков рядом
